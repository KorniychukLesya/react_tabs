{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","onTabSelected","selectedTabId","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","React","useState","setSelectedTab","event","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EACjBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAEjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACIP,EAAKQ,KAAI,SAAAH,GAAG,OACZ,oBACEE,UAAWE,IAAW,GACpB,CAAE,YAAaJ,EAAIC,KAAOH,EAAYG,KACxC,UAAQ,MAHV,SAME,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WAENN,EAAIC,KAAOH,EAAYG,IAClBL,EAAcI,IANxB,SASGA,EAAIO,SAXFP,EAAIC,WAkBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACIJ,EAAYU,cCvCTb,EAAO,CAClB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAwCC,IAAMC,SAAShB,EAAK,GAAGM,IAA/D,mBAAOJ,EAAP,KAAsBe,EAAtB,KAMA,OACE,sBAAKV,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACuBL,IAAa,UAC5BF,EAAKI,MAAK,SAACC,GAAD,OAAcA,EAAIC,KAAOJ,YADP,aAC7B,EAAqDU,UAE5D,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAZgB,SAACiB,GACrBD,EAAeC,EAAMZ,KAYjBJ,cAAeA,QC1BvBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8bc5999.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tabs: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  onTabSelected,\n  selectedTabId,\n}) => {\n  const selectedTab = tabs\n    .find(tab => tab.id === selectedTabId) || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {(tabs.map(tab => (\n            <li\n              className={classNames('',\n                { 'is-active': tab.id === selectedTab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                  (tab.id !== selectedTab.id)\n                    && (onTabSelected(tab));\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          )))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {(selectedTab.content)}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTab] = React.useState(tabs[0].id);\n\n  const onTabSelected = (event: Tab) => {\n    setSelectedTab(event.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${(selectedTabId\n          && (tabs.find((tab: Tab) => tab.id === selectedTabId))?.title)}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={onTabSelected}\n        selectedTabId={selectedTabId}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}